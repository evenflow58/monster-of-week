AWSTemplateFormatVersion: 2010-09-09
Description: The Monster of the Week Pipeline

Parameters:
  GitHubRepo:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
    Default: monster-of-week
  GitHubBranch:
    Type: String
    AllowedPattern: "[A-Za-z0-9-]+"
    Default: master

Conditions:
  IsProduction: !Equals [!Ref GitHubBranch, "master"]

Resources:
  BuildRunner:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-BuildRunner
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        ComputeType: BUILD_GENERAL1_MEDIUM
        Image: aws/codebuild/standard:6.0
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !ImportValue ArtifactBucketId
          - Name: S3_BUCKET
            Value: !ImportValue ArtifactBucketId
      ServiceRole: !ImportValue BuildExecutionRoleArn
      Source:
        Type: CODEPIPELINE
        BuildSpec: infrastructure/pipeline/buildspec-build.yaml

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}
      ArtifactStore:
        Type: S3
        Location: !ImportValue ArtifactBucketId
      RestartExecutionOnUpdate: true
      RoleArn: !ImportValue PipelineInfrastructureRoleArn
      Stages:
        - Name: Source
          Actions:
            - Name: Source
              InputArtifacts: []
              OutputArtifacts:
                - Name: SourceCode
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Version: 1
                Provider: GitHub
              Configuration:
                Owner: "{{resolve:secretsmanager:Github:SecretString:owner}}"
                Repo: !Ref GitHubRepo
                Branch: !Ref GitHubBranch
                PollForSourceChanges: false
                OAuthToken: "{{resolve:secretsmanager:Github:SecretString:token}}"
              RunOrder: 1
        - Name: Build
          Actions:
          - Name: Build
            ActionTypeId:
              Category: Build
              Owner: AWS
              Version: 1
              Provider: CodeBuild
            Configuration:
              ProjectName: !Ref BuildRunner
            InputArtifacts:
              - Name: SourceCode
            OutputArtifacts:
              - Name: uiBuildOutput
              - Name: lambdaEdgeBuildOutput
              - Name: apiGatewayBuildOutput
              - Name: apiGatewayDeploymentBuildOutput
              - Name: testGetBuildOutput
            RunOrder: 1
        - Name: !If [IsProduction, 'Staging', !Ref GitHubBranch]
          Actions:
            - Name: DeployUiCode
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: S3
                Version: 1
              RunOrder: 1
              Configuration:
                BucketName: !ImportValue UiBucketName
                Extract: true
                ObjectKey: !If [IsProduction, 'master', !Ref GitHubBranch]
              InputArtifacts:
                - Name: uiBuildOutput
              Region: us-east-1
            - Name: DeployApi
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !ImportValue CloudFormationExecutionRoleArn
                ParameterOverrides: !Sub
                  - '{ "BasePathDomain": "${BasePathDomain}" } '
                  - BasePathDomain: !If [IsProduction, 'api.monsterplaybook.rip', !Sub 'api.${GitHubBranch}.monsterplaybook.rip']
                StackName: !Sub '${AWS::StackName}-Stack-Api'
                TemplatePath: apiGatewayBuildOutput::infrastructure/template.package.yaml
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                OutputFileName: api.json
              InputArtifacts:
                - Name: apiGatewayBuildOutput
              OutputArtifacts:
                - Name: apiGatewayTemplateOutput
              RunOrder: 1
            # - Name: TestGet
            #   ActionTypeId:
            #     Category: Deploy
            #     Owner: AWS
            #     Provider: CloudFormation
            #     Version: 1
            #   Configuration:
            #     ActionMode: CREATE_UPDATE
            #     RoleArn: !ImportValue CloudFormationExecutionRoleArn
            #     ParameterOverrides: |
            #       {
            #         "ApiGatewayId": {"Fn::GetParam": ["apiGatewayTemplateOutput", "api.json", "ApiGatewayId"]},
            #         "RootResourceId": {"Fn::GetParam": ["apiGatewayTemplateOutput", "api.json", "RootResourceId"]}
            #       }
            #     StackName: !Sub '${AWS::StackName}-Test-Get'
            #     TemplatePath: testGetBuildOutput::template.package.yaml
            #     Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
            #   InputArtifacts:
            #     - Name: testGetBuildOutput
            #     - Name: apiGatewayTemplateOutput
            #   RunOrder: 2
            - Name: DeployUI
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !ImportValue CloudFormationExecutionRoleArn
                StackName: !Sub '${AWS::StackName}-Stack-UI'
                TemplatePath: lambdaEdgeBuildOutput::infrastructure/template.package.yaml
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                ParameterOverrides: !Sub
                  - '{ "Domain": "${SubDomain}.monsterplaybook.rip", "BranchName": "${BranchName}" }'
                  - SubDomain: !If [IsProduction, 'staging', !Ref GitHubBranch]
                    BranchName: !Ref GitHubBranch
              InputArtifacts:
                - Name: lambdaEdgeBuildOutput
              RunOrder: 3
            - Name: DeployApiDeployment
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CREATE_UPDATE
                RoleArn: !ImportValue CloudFormationExecutionRoleArn
                StackName: !Sub '${AWS::StackName}-Stack-Api-Deployment'
                TemplatePath: apiGatewayDeploymentBuildOutput::infrastructure/template.package.yaml
                Capabilities: CAPABILITY_IAM,CAPABILITY_AUTO_EXPAND
                ParameterOverrides: !Sub
                  - '{ "StageName": "${StageName}" }'
                  - StageName: !If [IsProduction, 'staging', !Ref GitHubBranch]
              InputArtifacts:
                - Name: apiGatewayDeploymentBuildOutput
              RunOrder: 3
            # - Name: ExecuteApiChangeSet
            #   ActionTypeId:
            #     Category: Deploy
            #     Owner: AWS
            #     Provider: CloudFormation
            #     Version: 1
            #   Configuration:
            #     ActionMode: CHANGE_SET_EXECUTE
            #     RoleArn: !ImportValue CloudFormationExecutionRoleArn
            #     StackName: !Sub '${AWS::StackName}-Stack-Api-Beta'
            #     ChangeSetName: !Sub '${AWS::StackName}-ChangeSet-Api-Beta'
            #   OutputArtifacts:
            #     - Name: !Sub '${AWS::StackName}-ChangeSet-Api-Beta'
            #   RunOrder: 2
            # - Name: ExecuteUIChangeSet
            #   ActionTypeId:
            #     Category: Deploy
            #     Owner: AWS
            #     Provider: CloudFormation
            #     Version: 1
            #   Configuration:
            #     ActionMode: CHANGE_SET_EXECUTE
            #     RoleArn: !ImportValue CloudFormationExecutionRoleArn
            #     StackName: !Sub '${AWS::StackName}-Stack-UI-Beta'
            #     ChangeSetName: !Sub '${AWS::StackName}-ChangeSet-UI-Beta'
            #   OutputArtifacts:
            #     - Name: !Sub '${AWS::StackName}-ChangeSet-UI-Beta'
            #   RunOrder: 3
            # - Name: ExecuteApiDeploymentChangeSet
              # ActionTypeId:
              #   Category: Deploy
              #   Owner: AWS
              #   Provider: CloudFormation
              #   Version: 1
              # Configuration:
              #   ActionMode: CHANGE_SET_EXECUTE
              #   RoleArn: !ImportValue CloudFormationExecutionRoleArn
              #   StackName: !Sub '${AWS::StackName}-Stack-Api-Deployment-Beta'
              #   ChangeSetName: !Sub '${AWS::StackName}-ChangeSet-Api-Deployment-Beta'
              # OutputArtifacts:
              #   - Name: !Sub '${AWS::StackName}-ChangeSet-Api-Deployment-Beta'
              # RunOrder: 3
        - !If
          - IsProduction
          - Name: Production
            Actions:
              - Name: DeploymentApproval
                ActionTypeId:
                  Category: Approval
                  Owner: AWS
                  Provider: Manual
                  Version: 1
                RunOrder: 1
              - Name: CreateChangeSet
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: 1
                Configuration:
                  ActionMode: CHANGE_SET_REPLACE
                  RoleArn: !ImportValue CloudFormationExecutionRoleArn
                  StackName: !Sub '${AWS::StackName}-Stack-UI-Prod'
                  ChangeSetName: !Sub '${AWS::StackName}-ChangeSet-UI-Prod'
                  TemplatePath: lambdaEdgeBuildOutput::ui.yaml
                  Capabilities: CAPABILITY_IAM
                  ParameterOverrides: '{ "Domain": "monsterplaybook.rip" }'
                InputArtifacts:
                  - Name: lambdaEdgeBuildOutput
                RunOrder: 2
              - Name: ExecuteChangeSet
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: CloudFormation
                  Version: 1
                Configuration:
                  ActionMode: CHANGE_SET_EXECUTE
                  RoleArn: !ImportValue CloudFormationExecutionRoleArn
                  StackName: !Sub '${AWS::StackName}-Stack-UI-Prod'
                  ChangeSetName: !Sub '${AWS::StackName}-ChangeSet-UI-Prod'
                OutputArtifacts:
                  - Name: !Sub '${AWS::StackName}-ChangeSet-UI-Prod'
                RunOrder: 3
          - !Ref AWS::NoValue